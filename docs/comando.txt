
+---------------------------------------+
Autentica√ß√£o Git Hub via Vs Code
+---------------------------------------+

git config user.name "Seu Nome"
git config user.email "seu.email@exemplo.com"

+---------------------------------------+

  Comandos Docker

+---------------------------------------+

docker compose down --volumes --remove-orphans                                  :: remove os container e pelo que eu entendi limpa os res√≠duais caches
docker compose -p recarga up --build/ docker compose up -d                      :: Constroi as img e inicia os containers
docker compose logs  -f recarga-cliente-1                                       :: Organiza os eventos de log
docker compose -p recarga down                                                  :: Para o container em execu√ß√£o 
docker compose -p recarga up --build -d client-2 client-3                       :: Subir clientes individualmente
docker stop recarga-client-1                                                    :: Exclui o container 
                                                                                :: falta um comando pra apagar todos os containers e imagens de uma vez s√≥


docker ps -a                                                                    :: Status do container 
docker logs <nome ou id do container>                                           :: Analisar os logs de eventos do container



docker compose down --volumes                                                   :: Apaga os volumes
docker volume prune                                                             :: Apaga todos os volumes orf√£o antes 



+---------------------------------------+

Comandos de Instala√ß√£o Pip3 + Framewhorks

+---------------------------------------+
sudo apt install python3-pip
pip3 --version
pip install flask paho-mqtt


+---------------------------------------+

Comandos de Configura√ß√£o do Venv Pip3

+---------------------------------------+
python3 -m venv venv                                                           :: Criar o ambiente virtual venv
source venv/bin/activate                                                       :: Ativar o ambiente venv na m√°quina
deactivate                                                                     :: Desativar o ambiente venv na m√°quina
rm -r venv                                                                     :: Remover o ambiente

+---------------------------------------+

Comandos de Configura√ß√£o de Redes

+---------------------------------------+

sudo lsof -i :1883                                                             :: Descobrir quem e quais servi√ßos est√£o usando a porta no momento
sudo systemctl stop mosquitto                                                  :: Desativa o servi√ßo que est√° usando no momento

sudo netstat -tulnp | grep 1883                                                :: Verifica se voltou a usar a porta 

+---------------------------------------+
Ativa as permiss√µes para o usu√°rio 

+---------------------------------------+
sudo chown -R $USER:$USER app/mosquitto/BA                                     :: Devolve a posse do diret√≥rio e arquivos para voc√™
sudo chmod -R u+rw app/mosquitto/BA                                            :: Garante permiss√£o de leitura e escrita para seu usu√°rio        

+---------------------------------------+
Ativa as arquivo bash.sh 
+---------------------------------------+

cd caminho_para_o_arquivo/ajustar_permissoes.sh                                :: V√° para o caminho do seu arquivo bash.sh
chmod +x ajustar_permissoes.sh                                                 :: Concede permiss√µes ao usuario de leitura e escrita
./ajustar_permissoes.sh                                                        :: Rode o arquivo uma vez que est√° no diret√≥rio do mesmo



python3 -m main reservar CLIENTE01 POSTO01                                     :: para simular transa√ß√£o do n√≥ do blockchain execute dentro do /client


+---------------------------------------+
Verifica depend√™ncias adicionais 
+---------------------------------------+

pip install grpcio protobuf                                                    :: O SDK Python do Hyperledger Fabric depende fortemente de bibliotecas como grpc, aiohttp e outras. Verifique se seu ambiente possui o protobuf e o grpcio atualizados:





‚ö†Ô∏è Aten√ß√£o:
Esse SDK (fabric-sdk-py) n√£o √© mais mantido oficialmente pela Hyperledger. A Hyperledger recomenda o uso do SDK em Node.js, Go ou Java.
O SDK Python funciona bem para testes, prot√≥tipos e alguns casos simples, mas n√£o √© indicado para produ√ß√£o.

üîã Iniciar recarga

üèÅ Finalizar recarga

üóìÔ∏è Reserva de posto

üí∞ Pagamento

üìú Consulta de hist√≥rico



+---------------------------------------+
Passo a passo para testar as fun√ß√µes 
+---------------------------------------+

truffle console :: Entra no terminal truffle
await contrato.reservarPosto("CLIENTE01", "POSTO01");                                                      :: Fazer uma Reserva
await contrato.realizarPagamento("CLIENTE01", "POSTO01", { value: web3.utils.toWei('1', 'ether') });       :: Realizar Pagamaento


await contrato.iniciarRecarga("CLIENTE01", "POSTO01");                                                     ::  Iniciar Recarga
await contrato.finalizarRecarga("CLIENTE01", "POSTO01");                                                   ::  Finalizar Recarga


const historico = await contrato.consultarHistorico();                                                     :: Consultar Hist√≥rico
cconsole.log(historico);                                                                                           

const contador = await contrato.contador();                                                                :: Conferir o contador de transa√ß√µes
console.log(contador.toString());
 
 Obs: 1. Rodar script ./setup_blockchain.sh (no raiz)     
      2. Entrar no cliente e criar o venv
      3. Testar as fun√ß√µes (smart contract)